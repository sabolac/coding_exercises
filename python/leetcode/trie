#!/usr/bin/env python3


class TrieNode:
    def __init__(self):
        self.children: dict[str, TrieNode] = {}
        self.end_word = False


class Trie:

    def __init__(self):
        self.root = TrieNode()

    def insert(self, word: str) -> None:
        n = self.root
        for c in word:
            if c not in n.children:
                n.children[c] = TrieNode()
            n = n.children[c]
        n.end_word = True

    def search(self, word: str) -> bool:
        n = self.root
        for c in word:
            if c not in n.children:
                return False
            n = n.children[c]

        return n.end_word

    def startsWith(self, prefix: str) -> bool:
        n = self.root
        for c in prefix:
            if c not in n.children:
                return False
            n = n.children[c]
        return True
