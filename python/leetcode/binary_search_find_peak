#!/usr/bin/env python3


"""
Ref: https://leetcode.com/problems/find-peak-element

Find Peak Element

A peak element is an element that is strictly greater than its neighbors.

Given a 0-indexed integer array nums, find a peak element, and return its index.
If the array contains multiple peaks, return the index to any of the peaks.

You may imagine that nums[-1] = nums[n] = -âˆž. In other words, an element is
always considered to be strictly greater than a neighbor that is outside the
array.

You must write an algorithm that runs in O(log n) time.


Example 1:

Input: nums = [1,2,3,1]
Output: 2
Explanation: 3 is a peak element and your function should return the index number 2.


Example 2:

Input: nums = [1,2,1,3,5,6,4]
Output: 5
Explanation: Your function can return either index number 1 where the peak element is 2, or index number 5 where the peak element is 6.


Constraints:

1 <= nums.length <= 1000
-2^31 <= nums[i] <= 2^31 - 1
nums[i] != nums[i + 1] for all valid i.
"""


class Solution:
    def findPeakElement(self, nums: list[int]) -> int:
        l = 0
        r = len(nums) - 1
        while l <= r:
            mid = l + (r-l)//2
            if (mid == 0 or nums[mid] > nums[mid-1]) and (
                    mid == len(nums)-1 or nums[mid] > nums[mid+1]):
                return mid
            if nums[mid] < nums[mid+1]:
                l = mid+1
            else:
                r = mid-1


def main():
    nums = [1, 2, 3, 1]
    assert Solution().findPeakElement(nums) == 2

    nums = [1, 2, 3, 4]
    assert Solution().findPeakElement(nums) == 3

    nums = [1, 2]
    assert Solution().findPeakElement(nums) == 1

    nums = [1, 2, 3]
    assert Solution().findPeakElement(nums) == 2

    nums = [2, 1]
    assert Solution().findPeakElement(nums) == 0

    nums = [3, 2, 1]
    assert Solution().findPeakElement(nums) == 0

    nums = [1, 2, 1, 3, 5, 6, 4]
    assert Solution().findPeakElement(nums) == 5

    nums = [1, 2, 1, 3, 5, 6, 7, 8]
    assert Solution().findPeakElement(nums) == 7

    nums = [8, 7, 6, 5, 4, 3]
    assert Solution().findPeakElement(nums) == 0


main()
