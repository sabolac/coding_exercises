#!/usr/bin/env python3


"""
Ref: https://leetcode.com/problems/longest-consecutive-sequence

Longest Consecutive Sequence

Given an unsorted array of integers nums, return the length of the longest
consecutive elements sequence.

You must write an algorithm that runs in O(n) time.



Example 1:

Input: nums = [100,4,200,1,3,2]
Output: 4
Explanation: The longest consecutive elements sequence is [1, 2, 3, 4].
Therefore its length is 4.


Example 2:

Input: nums = [0,3,7,2,5,8,4,6,0,1]
Output: 9


Constraints:

0 <= nums.length <= 10^5
-10^9 <= nums[i] <= 10^9
"""


from typing import List


class Solution:
    def longestConsecutive(self, nums: List[int]) -> int:
        d_min = {}
        d_max = {}
        seen_before = set()

        for v in nums:
            if v in seen_before:
                continue
            seen_before.add(v)

            mx = mn = None

            if v-1 in d_max:
                mx = d_max[v-1]
                mx[1] = v
                del d_max[v-1]
                d_max[v] = mx

            if v+1 in d_min:
                mn = d_min[v+1]
                mn[0] = v
                del d_min[v+1]
                d_min[v] = mn

            # if we matched both, combine the intervals
            if mn and mx:
                l = mx[0]
                r = mn[1]
                del d_min[v]
                del d_max[v]
                d_min[l] = d_max[r] = [l, r]

            if not mx and not mn:
                d_min[v] = d_max[v] = [v, v]

        return max([r-l+1 for l, r in d_min.values()], default=0)

    def longestConsecutive2(self, nums: List[int]) -> int:
        intervals = {}
        seen_before = set()
        mx = 0
        for v in nums:
            if v in seen_before:
                continue
            seen_before.add(v)

            l = r = v

            if v-1 in intervals:
                l = intervals[v-1][0]

            if v+1 in intervals:
                r = intervals[v+1][1]

            intervals[l] = intervals[r] = [l, r]
            mx = max(mx, r-l+1)

        return mx


def main():
    assert Solution().longestConsecutive([100, 4, 200, 1, 3, 2]) == 4
    assert Solution().longestConsecutive([0, 3, 7, 2, 5, 8, 4, 6, 0, 1]) == 9


main()
