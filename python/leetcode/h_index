#!/usr/bin/env python3

"""
Ref: https://leetcode.com/problems/h-index

Given an array of integers citations where citations[i] is the number of
citations a researcher received for their ith paper, return the researcher's
h-index.

According to the definition of h-index on Wikipedia: The h-index is defined as
the maximum value of h such that the given researcher has published at least h
papers that have each been cited at least h times.



Example 1:

Input: citations = [3,0,6,1,5]
Output: 3
Explanation: [3,0,6,1,5] means the researcher has 5 papers in total and each of
them had received 3, 0, 6, 1, 5 citations respectively. Since the researcher has
3 papers with at least 3 citations each and the remaining two with no more than
3 citations each, their h-index is 3.


Example 2:

Input: citations = [1,3,1]
Output: 1


Constraints:

n == citations.length
1 <= n <= 5000
0 <= citations[i] <= 1000
"""


from typing import List
import heapq


class Solution:
    def hIndex(self, citations: List[int]) -> int:
        h_index = []
        for c in citations:
            if c > len(h_index):
                heapq.heappush(h_index, c)
            if len(h_index) > 0:
                min = h_index[0]
                if min < len(h_index):
                    heapq.heappop(h_index)

        return len(h_index)


def main():
    assert Solution().hIndex([0]) == 0
    assert Solution().hIndex([0, 0]) == 0
    assert Solution().hIndex([0, 0, 0]) == 0
    assert Solution().hIndex([3, 0, 6, 1, 5]) == 3
    assert Solution().hIndex([1, 3, 1]) == 1
    assert Solution().hIndex([8, 15, 5, 2, 11, 17, 1, 3, 13, 7]) == 6


main()
