#!/usr/bin/env python3


"""
Ref: https://leetcode.com/problems/word-pattern

Given a pattern and a string s, find if s follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter
in pattern and a non-empty word in s.



Example 1:

Input: pattern = "abba", s = "dog cat cat dog"
Output: true


Example 2:

Input: pattern = "abba", s = "dog cat cat fish"
Output: false


Example 3:

Input: pattern = "aaaa", s = "dog cat cat dog"
Output: false


Constraints:

1 <= pattern.length <= 300
pattern contains only lower-case English letters.
1 <= s.length <= 3000
s contains only lowercase English letters and spaces ' '.
s does not contain any leading or trailing spaces.
All the words in s are separated by a single space.
"""


class Solution:
    def wordPattern(self, pattern: str, s: str) -> bool:
        words = s.split()

        if len(pattern) != len(words):
            return False

        c_2_i = {}
        w_2_i = {}
        for i, (c, w) in enumerate(zip(pattern, words)):
            if c_2_i.get(c, i) != w_2_i.get(w, i):
                return False
            c_2_i[c] = w_2_i[w] = i

        return True


def main():
    assert Solution().wordPattern("abba", "dog cat cat dog")
    assert not Solution().wordPattern("abba", "dog cat cat fish")
    assert not Solution().wordPattern("aaaa", "dog cat cat dog")


main()
