#!/usr/bin/env python3

"""
Ref: https://leetcode.com/problems/valid-anagram

Valid Anagram

Given two strings s and t, return true if t is an anagram of s, and false
otherwise.

An Anagram is a word or phrase formed by rearranging the letters of a different
word or phrase, typically using all the original letters exactly once.



Example 1:

Input: s = "anagram", t = "nagaram"
Output: true


Example 2:

Input: s = "rat", t = "car"
Output: false


Constraints:

1 <= s.length, t.length <= 5 * 10^4
s and t consist of lowercase English letters.


Follow up: What if the inputs contain Unicode characters? How would you adapt
your solution to such a case?
"""


from collections import Counter


class Solution:
    def isAnagram(self, s: str, t: str) -> bool:
        sc = Counter(s)
        tc = Counter(t)
        return sc == tc


def main():
    assert Solution().isAnagram("anagram", "nagaram")
    assert not Solution().isAnagram("rat", "car")


main()
