#!/usr/bin/env python3

"""
Ref: https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string

Given two strings needle and haystack, return the index of the first occurrence
of needle in haystack, or -1 if needle is not part of haystack.



Example 1:

Input: haystack = "sadbutsad", needle = "sad"
Output: 0
Explanation: "sad" occurs at index 0 and 6.
The first occurrence is at index 0, so we return 0.

Example 2:

Input: haystack = "leetcode", needle = "leeto"
Output: -1
Explanation: "leeto" did not occur in "leetcode", so we return -1.


Constraints:

1 <= haystack.length, needle.length <= 10^4
haystack and needle consist of only lowercase English characters.
"""


class Solution:
    def strStr(self, haystack: str, needle: str) -> int:
        N = len(haystack)
        n = len(needle)

        for i in range(N-n+1):
            for j in range(n):
                if haystack[i+j] != needle[j]:
                    break
            else:
                return i

        return -1


def main():
    assert Solution().strStr("sadbutsad", "sad") == 0
    assert Solution().strStr("foobar", "bar") == 3
    assert Solution().strStr("foobar", "foobar") == 0
    assert Solution().strStr("ffoobar", "foobar") == 1
    assert Solution().strStr("fooba", "bar") == -1
    assert Solution().strStr("leetcode", "leeto") == -1


main()
